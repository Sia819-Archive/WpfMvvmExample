<Window x:Class="PlainMvvm.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PlainMvvm"
        xmlns:vm="clr-namespace:PlainMvvm.ViewModel"
        mc:Ignorable="d"
        Title="Without Framework" Height="250" Width="500">
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Grid.Column="0" 
                   Text="Your Value : " 
                   Foreground="Gray"
                   VerticalAlignment="Center" 
                   HorizontalAlignment="Right" 
                   Margin="5" />
        <TextBlock Grid.Row="0" Grid.Column="1" Margin="5">
            <Run Text="&quot;" Foreground="Gray"
            /><Run Text="{Binding MyValue}"
            /><Run Text="&quot;   &lt;-  Binded in ViewModel " Foreground="Gray" />
        </TextBlock>

        <TextBlock Grid.Row="1" Grid.Column="0" 
                   Text="Binded TextBox : " 
                   VerticalAlignment="Center" 
                   HorizontalAlignment="Right" 
                   Margin="5" />
        <!-- TargetNullValue를 설정하면 바인딩 대상값이 null로 초기화가 되어있지 않았을 때, 초기값을 설정합니다.
             단, 이 경우 TargetNullValue로 인한 초기화로는 Binding이 발생하지 않습니다. -->
        <TextBox Grid.Row="1" Grid.Column="1" 
                 Text="{Binding MyValue, UpdateSourceTrigger=PropertyChanged, TargetNullValue='Change me by typing'}" 
                 Margin="5"/>

        <TextBlock Grid.Row="2" Grid.Column="0" Text="Set Value by Button : " VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5"  />
        <Grid Grid.Row="2" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <!-- TODO Attached Property 를 사용해서 HintText Value생성해서 Style을 Hint에 바인딩 -->
            <TextBox Text="{Binding InputBox, TargetNullValue='Button click to change value'}" Margin="5" />
            <Button Command="{Binding SetValue_Button_Click}" Content="Set Value" Grid.Column="1" Padding="5 0" Margin="5" />
        </Grid>





    </Grid>
</Window>







<!-- List Binding Example -->
<!--<ListBox>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="IsSelected" Value="{Binding Content.IsSelected, Mode=TwoWay, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter Margin="5" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal">
                        
                    </StackPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Button/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>-->


<!-- Button Hint Style Example -->
<!--<Style x:Key="TextBoxHint" TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Style.Resources>
        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
            <VisualBrush.Visual>
                <Label Content="Search" Foreground="LightGray" />
            </VisualBrush.Visual>
        </VisualBrush>
    </Style.Resources>
    <Style.Triggers>
        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
        </Trigger>
        <Trigger Property="Text" Value="{x:Null}">
            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
        </Trigger>
        <Trigger Property="IsKeyboardFocused" Value="True">
            <Setter Property="Background" Value="White" />
        </Trigger>
    </Style.Triggers>
</Style>-->